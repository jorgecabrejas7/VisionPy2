import sys
import time
import os
#import matplotlib
##matplotlib.use('Qt4agg')
#import matplotlib.pyplot as plt
import _hx_core
import numpy as np
import gc

class Autocorrelation_FFT(PyScriptObject):


    def __init__(self):
        self.port_src = self.ports.data
        self.port_src.valid_types = ['HxUniformScalarField3']
        self.port_src.label = "Reference"

        self.do_it = HxPortDoIt(self, 'doIt', 'Apply')

    def update(self):
        PyScriptObject.update(self)


    def compute(self):
        # Check if module is applied
        if not self.do_it.was_hit:
            return

        # Check if input data is connected
        if self.data.source() is None:
            return

        if self.do_it.was_hit:
            if self.port_src.connected:
               reference = self.port_src.source()
               imload=hx_project.get(reference.name)
               bbox=imload.bounding_box
               im_array=imload.get_array()
               dim_string=imload.ports.Latticeinfo.text
               voxel_string=imload.ports.Voxelsize.text 
               voxel_split=voxel_string.split()
               dimx=int(dim_string.split('x')[0])
               dimy=int(dim_string.split('x')[1])
               dimz=int(dim_string.split('x')[2].split(',')[0])
               #dimz=dimz.replace(',','')
               voxel_size=voxel_split[0]
               #print("Image loaded and converted to array")
               mean_im_array=np.mean(im_array)
               f=np.fft.fftn(im_array-mean_im_array)
               conjfft=np.conj(f)
               im1=f*conjfft
               im2=np.fft.ifftn(im1)
               im3=abs(im2)
               im4=np.fft.fftshift(im3)
               #print("FFT DONE")
               del im1
               del im2
               del im3
     
     
               obj = hx_project.create('HxUniformScalarField3')
               obj.set_array(im4)
               obj.bounding_box=bbox
               del im4
               im5=hx_project.get(obj.name)
               #print("Output image loaded in Avizo")
               conv=hx_project.create('HxCastField')
               conv.ports.data.connect(im5) 
               conv.ports.outputType._set_state('values 1  4')
               conv.update()
               conv.execute()
               #print("Output image converted to 32bit float")
     
               im_conv=hx_project.get(conv.results[0].name)   
               im_conv.name='Autocorrelation_map'
               im_conv_array=im_conv.get_array()
               hx_project.remove(obj)
               hx_project.remove(conv)
               #hx_project.remove(im_conv)
               del obj 
               del conv
               del im5
               #del im_conv
               list_dim=[dimx,dimy,dimz]
               min_list=min(list_dim)
               max_conv_array=int(min_list/2)
               max_conv=im_conv_array[int(dimx/2),int(dimy/2),int(dimz/2)]
               spreadsheet=hx_project.create('HxSpreadSheet')
               spreadsheet._tcl_interp('addColumn distance float')
               spreadsheet._tcl_interp('addColumn autocorrelation_X float')
               spreadsheet._tcl_interp('addColumn autocorrelation_Y float')
               spreadsheet._tcl_interp('addColumn autocorrelation_Z float')
               command = 'setNumRows '+np.str(max_conv_array)
               spreadsheet._tcl_interp(command)
               
     
               for i in range(0,max_conv_array):
                   temp1=im_conv_array[int(dimx/2)+int(i),int(dimy/2),int(dimz/2)]/max_conv
                   temp2=im_conv_array[int(dimx/2),int(dimy/2)+int(i),int(dimz/2)]/max_conv
                   temp3=im_conv_array[int(dimx/2),int(dimy/2),int(dimz/2)+int(i)]/max_conv
                   command1 = 'setValue 0 '+str(i)+'  '+str(int(i)*float(voxel_size))
                   command2= 'setValue 1 '+str(i)+'  '+str(temp1)
                   command3= 'setValue 2 '+str(i)+'  '+str(temp2)
                   command4= 'setValue 3 '+str(i)+'  '+str(temp3)
                   spreadsheet._tcl_interp(command1)
                   spreadsheet._tcl_interp(command2)
                   spreadsheet._tcl_interp(command3)
                   spreadsheet._tcl_interp(command4) 
                   spreadsheet.name='autocorr_spreadsheet'    
               
               del im_conv_array  
               spreadsheet.ports.master.connect(self)

           
            PyScriptObject.compute(self)
